// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

#include <iostream>
#include <vector>

static void fibonacci(int max, std::vector<int>& vec) {
    int low = 1;
    int high = 1;
    while (high < max) {
        int tmp = low;
        low = high;
        high = tmp + high;
        vec.push_back(high);
    }
}

int main(int argc, char** argv) {
    using std::vector;

    const int max = 4000000;
    vector<int> vec;
    fibonacci(max, vec);

    int sum = 0;
    for (vector<int>::iterator i = vec.begin(); i != vec.end(); i++) {
        if (*i % 2 == 0)
            sum += *i;
    }
    std::cout << sum << std::endl;
}
